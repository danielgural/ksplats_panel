!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global=global||self).Refine={})}(this,(function(exports){"use strict";var Recoil_err=function(message){const error=new Error(message);if(void 0===error.stack)try{throw error}catch(_){}return error};var Refine_API={assertion:function(checker,errorMessage="assertion error"){return value=>{const result=checker(value);return"success"===result.type?result.value:function(suffix,resultFailure){if(null!=resultFailure){const path=resultFailure.path.toString(),message=resultFailure.message;throw Recoil_err(`[refine.js (path=${path}, message=${message})]: ${suffix}`)}throw Recoil_err("[refine.js (null result)]: "+suffix)}(errorMessage,result)}},coercion:function(checker,onResult){return value=>{const result=checker(value);return null!=onResult&&onResult(result),"success"===result.type?result.value:null}}};function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class Path{constructor(parent=null,field="<root>"){_defineProperty(this,"parent",void 0),_defineProperty(this,"field",void 0),this.parent=parent,this.field=field}extend(field){return new Path(this,field)}toString(){const pieces=[];let current=this;for(;null!=current;){const{field:field,parent:parent}=current;pieces.push(field),current=parent}return pieces.reverse().join("")}}var Refine_Checkers_1=Path,Refine_Checkers_2=function(value,warnings){return{type:"success",value:value,warnings:warnings}},Refine_Checkers_3=function(message,path){return{type:"failure",message:message,path:path}},Refine_Checkers_4=function(checker,next){return(value,path=new Path)=>{const result=checker(value,path);return"failure"===result.type?result:next(result,path)}},Refine_Checkers$1=Object.freeze({__proto__:null,Path:Refine_Checkers_1,success:Refine_Checkers_2,failure:Refine_Checkers_3,compose:Refine_Checkers_4});const{Path:Path$1,compose:compose$1,failure:failure$1,success:success$1}=Refine_Checkers$1;function isPlainObject(value){if("[object Object]"!==Object.prototype.toString.call(value))return!1;const prototype=Object.getPrototypeOf(value);return null===prototype||prototype===Object.prototype}function array(valueChecker){return(value,path=new Path$1)=>{if(!Array.isArray(value))return failure$1("value is not an array",path);const len=value.length,out=new Array(len),warnings=[];for(let i=0;i<len;i++){const element=value[i],result=valueChecker(element,path.extend(`[${i}]`));if("failure"===result.type)return failure$1(result.message,result.path);out[i]=result.value,0!==result.warnings.length&&warnings.push(...result.warnings)}return success$1(out,warnings)}}function dict(valueChecker){return(value,path=new Path$1)=>{if("object"!=typeof value||null===value||!isPlainObject(value))return failure$1("value is not an object",path);const out={},warnings=[];for(const[key,element]of Object.entries(value)){const result=valueChecker(element,path.extend("."+key));if("failure"===result.type)return failure$1(result.message,result.path);out[key]=result.value,0!==result.warnings.length&&warnings.push(...result.warnings)}return success$1(out,warnings)}}class OptionalProperty{constructor(checker){_defineProperty(this,"checker",void 0),this.checker=checker}}function object(checkers){const checkerProperties=Object.keys(checkers);return(value,path=new Path$1)=>{if("object"!=typeof value||null===value||!isPlainObject(value))return failure$1("value is not an object",path);const out={},warnings=[];for(const key of checkerProperties){const provided=checkers[key];let check,element;if(provided instanceof OptionalProperty){if(check=provided.checker,!value.hasOwnProperty(key))continue;element=value[key]}else check=provided,element=value.hasOwnProperty(key)?value[key]:void 0;const result=check(element,path.extend("."+key));if("failure"===result.type)return failure$1(result.message,result.path);out[key]=result.value,0!==result.warnings.length&&warnings.push(...result.warnings)}return success$1(out,warnings)}}var Refine_ContainerCheckers_1=array,Refine_ContainerCheckers_2=function(...checkers){return(value,path=new Path$1)=>{if(!Array.isArray(value))return failure$1("value is not an array",path);const out=new Array(checkers.length),warnings=[];for(const[i,checker]of checkers.entries()){const result=checker(value[i],path.extend(`[${i}]`));if("failure"===result.type)return failure$1(result.message,result.path);out[i]=result.value,0!==result.warnings.length&&warnings.push(...result.warnings)}return success$1(out,warnings)}},Refine_ContainerCheckers_3=object,Refine_ContainerCheckers_4=function(checker){return new OptionalProperty((value,path=new Path$1)=>{const result=checker(value,path);return"failure"===result.type?{...result,message:"(optional property) "+result.message}:result})},Refine_ContainerCheckers_5=dict,Refine_ContainerCheckers_6=function(checker){return(value,path=new Path$1)=>{if(!(value instanceof Set))return failure$1("value is not a Set",path);const out=new Set,warnings=[];for(const item of value){const result=checker(item,path.extend("[]"));if("failure"===result.type)return failure$1(result.message,result.path);out.add(result.value),result.warnings.length&&warnings.push(...result.warnings)}return success$1(out,warnings)}},Refine_ContainerCheckers_7=function(keyChecker,valueChecker){return(value,path=new Path$1)=>{if(!(value instanceof Map))return failure$1("value is not a Map",path);const out=new Map,warnings=[];for(const[k,v]of value.entries()){const keyResult=keyChecker(k,path.extend(`[${k}] key`));if("failure"===keyResult.type)return failure$1(keyResult.message,keyResult.path);const valueResult=valueChecker(v,path.extend(`[${k}]`));if("failure"===valueResult.type)return failure$1(valueResult.message,valueResult.path);out.set(k,v),warnings.push(...keyResult.warnings,...valueResult.warnings)}return success$1(out,warnings)}},Refine_ContainerCheckers_8=function(valueChecker){return compose$1(array(valueChecker),({value:value,warnings:warnings})=>success$1([...value],warnings))},Refine_ContainerCheckers_9=function(valueChecker){return compose$1(dict(valueChecker),({value:value,warnings:warnings})=>success$1({...value},warnings))},Refine_ContainerCheckers_10=function(checkers){return compose$1(object(checkers),({value:value,warnings:warnings})=>success$1({...value},warnings))},Refine_ContainerCheckers$1=Object.freeze({__proto__:null,array:Refine_ContainerCheckers_1,tuple:Refine_ContainerCheckers_2,object:Refine_ContainerCheckers_3,optional:Refine_ContainerCheckers_4,dict:Refine_ContainerCheckers_5,set:Refine_ContainerCheckers_6,map:Refine_ContainerCheckers_7,writableArray:Refine_ContainerCheckers_8,writableDict:Refine_ContainerCheckers_9,writableObject:Refine_ContainerCheckers_10});const{assertion:assertion$1}=Refine_API;function tryParseJSONMixed(text,reviver){if(null==text)return null;try{return JSON.parse(text,reviver)}catch{return null}}var Refine_JSON={jsonParserEnforced:function(checker,suffix){const assertedChecker=assertion$1(checker,null!=suffix?suffix:"value is invalid");return rawJSON=>assertedChecker(tryParseJSONMixed(null!=rawJSON?rawJSON:""))},jsonParser:function(checker){return rawJSON=>{const result=checker(tryParseJSONMixed(rawJSON));return"success"===result.type?result.value:null}}};const{Path:Path$2,compose:compose$2,failure:failure$2,success:success$2}=Refine_Checkers$1;const MIXED_CHECKER=value=>success$2(value,[]);function string(regex){return(value,path=new Path$2)=>"string"!=typeof value?failure$2("value is not a string",path):null==regex||regex.test(value)?success$2(value,[]):failure$2("value does not match regex: "+regex.toString(),path)}var Refine_PrimitiveCheckers={mixed:function(){return MIXED_CHECKER},literal:function(literalValue){return(value,path=new Path$2)=>{var _str;return value===literalValue?success$2(literalValue,[]):failure$2("value is not literal "+(null!==(_str=(value=>JSON.stringify(value))(literalValue))&&void 0!==_str?_str:"void"),path)}},bool:function(){return(value,path=new Path$2)=>"boolean"==typeof value?success$2(value,[]):failure$2("value is not a boolean",path)},number:function(){return(value,path=new Path$2)=>"number"==typeof value?success$2(value,[]):failure$2("value is not a number",path)},string:string,stringLiterals:function(enumValues){return(value,path=new Path$2)=>{if("string"!=typeof value)return failure$2("value must be a string",path);const out=enumValues[value];return null==out?failure$2("value is not one of "+Object.values(enumValues).join(", "),path):success$2(out,[])}},date:function(){return(value,path=new Path$2)=>value instanceof Date?isNaN(value)?failure$2("invalid date",path):success$2(value,[]):failure$2("value is not a date",path)},jsonDate:function(){return compose$2(string(),({value:value,warnings:warnings},path)=>{const parsedDate=new Date(value);return Number.isNaN(parsedDate)?failure$2("value is not valid date string",path):success$2(parsedDate,warnings)})}};const{Path:Path$3,compose:compose$3,failure:failure$3,success:success$3}=Refine_Checkers$1;function unionFailure(message,path,failures){return failure$3(`${message}: ${failures.map(f=>f.message).join(", ")}`,path)}function union(...checkers){return(value,path=new Path$3)=>{const failures=[];for(const checker of checkers){const result=checker(value,path);if("success"===result.type)return success$3(result.value,result.warnings);failures.push(result)}return unionFailure("value did not match any types in union",path,failures)}}var Refine_UtilityCheckers={or:function(aChecker,bChecker){return(value,path=new Path$3)=>{const a=aChecker(value,path);if("success"===a.type)return success$3(a.value,a.warnings);const b=bChecker(value,path);return"success"===b.type?success$3(b.value,b.warnings):unionFailure("value did not match any types in or()",path,[a,b])}},union:union,match:function(...checkers){return union(...checkers)},nullable:function(checker,options){const{nullWithWarningWhenInvalid:nullWithWarningWhenInvalid=!1}=null!=options?options:{};return(value,parentPath=new Path$3)=>{if(null==value)return success$3(value,[]);const result=checker(value,parentPath);if("success"===result.type)return success$3(result.value,result.warnings);if(nullWithWarningWhenInvalid)return success$3(null,[result]);const{message:message,path:path}=result;return failure$3(message,path)}},voidable:function(checker,options){const{undefinedWithWarningWhenInvalid:undefinedWithWarningWhenInvalid=!1}=null!=options?options:{};return(value,parentPath=new Path$3)=>{if(void 0===value)return success$3(void 0,[]);const result=checker(value,parentPath);if("success"===result.type)return success$3(result.value,result.warnings);if(undefinedWithWarningWhenInvalid)return success$3(void 0,[result]);const{message:message,path:path}=result;return failure$3(message,path)}},withDefault:function(checker,fallback){return(value,path=new Path$3)=>{if(null==value)return success$3(fallback,[]);const result=checker(value,path);return"failure"===result.type||null!=result.value?result:success$3(fallback,[])}},constraint:function(checker,predicate){return compose$3(checker,({value:value,warnings:warnings},path)=>{const result=predicate(value),[passed,message]="boolean"==typeof result?[result,"value failed constraint check"]:result;return passed?success$3(value,warnings):failure$3(message,path)})},asType:function(checker,cast){return compose$3(checker,({value:value,warnings:warnings})=>success$3(cast(value),warnings))},lazy:function(getChecker){return(value,path=new Path$3)=>getChecker()(value,path)},custom:function(checkValue,failureMessage="failed to return non-null from custom checker."){return(value,path=new Path$3)=>{try{const checked=checkValue(value);return null!=checked?success$3(checked,[]):failure$3(failureMessage,path)}catch(error){return failure$3(error.message,path)}}}};const{assertion:assertion$2,coercion:coercion$1}=Refine_API,{Path:Path$4}=Refine_Checkers$1,{array:array$1,dict:dict$1,map:map$1,object:object$1,optional:optional$1,set:set$1,tuple:tuple$1,writableArray:writableArray$1,writableDict:writableDict$1,writableObject:writableObject$1}=Refine_ContainerCheckers$1,{jsonParser:jsonParser$1,jsonParserEnforced:jsonParserEnforced$1}=Refine_JSON,{bool:bool$1,date:date$1,jsonDate:jsonDate$1,literal:literal$1,mixed:mixed$1,number:number$1,string:string$1,stringLiterals:stringLiterals$1}=Refine_PrimitiveCheckers,{asType:asType$1,constraint:constraint$1,custom:custom$1,lazy:lazy$1,match:match$1,nullable:nullable$1,or:or$1,union:union$1,voidable:voidable$1,withDefault:withDefault$1}=Refine_UtilityCheckers;var Refine_index={assertion:assertion$2,coercion:coercion$1,jsonParser:jsonParser$1,jsonParserEnforced:jsonParserEnforced$1,Path:Path$4,mixed:mixed$1,literal:literal$1,bool:bool$1,number:number$1,string:string$1,stringLiterals:stringLiterals$1,date:date$1,jsonDate:jsonDate$1,asType:asType$1,or:or$1,union:union$1,match:match$1,nullable:nullable$1,voidable:voidable$1,withDefault:withDefault$1,constraint:constraint$1,lazy:lazy$1,custom:custom$1,array:array$1,tuple:tuple$1,dict:dict$1,object:object$1,optional:optional$1,set:set$1,map:map$1,writableArray:writableArray$1,writableDict:writableDict$1,writableObject:writableObject$1},Refine_index_1=Refine_index.assertion,Refine_index_2=Refine_index.coercion,Refine_index_3=Refine_index.jsonParser,Refine_index_4=Refine_index.jsonParserEnforced,Refine_index_5=Refine_index.Path,Refine_index_6=Refine_index.mixed,Refine_index_7=Refine_index.literal,Refine_index_8=Refine_index.bool,Refine_index_9=Refine_index.number,Refine_index_10=Refine_index.string,Refine_index_11=Refine_index.stringLiterals,Refine_index_12=Refine_index.date,Refine_index_13=Refine_index.jsonDate,Refine_index_14=Refine_index.asType,Refine_index_15=Refine_index.or,Refine_index_16=Refine_index.union,Refine_index_17=Refine_index.match,Refine_index_18=Refine_index.nullable,Refine_index_19=Refine_index.voidable,Refine_index_20=Refine_index.withDefault,Refine_index_21=Refine_index.constraint,Refine_index_22=Refine_index.lazy,Refine_index_23=Refine_index.custom,Refine_index_24=Refine_index.array,Refine_index_25=Refine_index.tuple,Refine_index_26=Refine_index.dict,Refine_index_27=Refine_index.object,Refine_index_28=Refine_index.optional,Refine_index_29=Refine_index.set,Refine_index_30=Refine_index.map,Refine_index_31=Refine_index.writableArray,Refine_index_32=Refine_index.writableDict,Refine_index_33=Refine_index.writableObject;exports.Path=Refine_index_5,exports.array=Refine_index_24,exports.asType=Refine_index_14,exports.assertion=Refine_index_1,exports.bool=Refine_index_8,exports.coercion=Refine_index_2,exports.constraint=Refine_index_21,exports.custom=Refine_index_23,exports.date=Refine_index_12,exports.default=Refine_index,exports.dict=Refine_index_26,exports.jsonDate=Refine_index_13,exports.jsonParser=Refine_index_3,exports.jsonParserEnforced=Refine_index_4,exports.lazy=Refine_index_22,exports.literal=Refine_index_7,exports.map=Refine_index_30,exports.match=Refine_index_17,exports.mixed=Refine_index_6,exports.nullable=Refine_index_18,exports.number=Refine_index_9,exports.object=Refine_index_27,exports.optional=Refine_index_28,exports.or=Refine_index_15,exports.set=Refine_index_29,exports.string=Refine_index_10,exports.stringLiterals=Refine_index_11,exports.tuple=Refine_index_25,exports.union=Refine_index_16,exports.voidable=Refine_index_19,exports.withDefault=Refine_index_20,exports.writableArray=Refine_index_31,exports.writableDict=Refine_index_32,exports.writableObject=Refine_index_33,Object.defineProperty(exports,"__esModule",{value:!0})}));
